Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./ADC.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./ADC.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

feature             0x1               ./ADC.o
x                   0x2               ./ADC.o
ptrTocallbkfn       0x2               ./ADC.o
flag                0x2               ./main.o
ADCvals             0x8               ./ADC.o
ptrToCallBackFun    0x2               ./ADC.o
myadcvalues         0x8               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./ADC.o
LOAD ./DIO.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x100a
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./ADC.o
 .text          0x00000092        0x0 ./DIO.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.ADC_init
                0x00000092       0x7c ./ADC.o
                0x00000092                ADC_init
 .text.ADC_FreeR
                0x0000010e      0x160 ./ADC.o
                0x0000010e                ADC_FreeR
 .text.asyncronousADC_startConversion
                0x0000026e      0x192 ./ADC.o
                0x0000026e                asyncronousADC_startConversion
 .text.ADC_setChannel
                0x00000400      0x122 ./ADC.o
                0x00000400                ADC_setChannel
 .text.ADC_reslution
                0x00000522       0x20 ./ADC.o
                0x00000522                ADC_reslution
 .text.__vector_16
                0x00000542      0x1a0 ./ADC.o
                0x00000542                __vector_16
 .text.DIO_Set_PORT_Direction
                0x000006e2       0x90 ./DIO.o
                0x000006e2                DIO_Set_PORT_Direction
 .text.DIO_Set_PIN_Direction
                0x00000772      0x248 ./DIO.o
                0x00000772                DIO_Set_PIN_Direction
 .text.DIO_Set_PORT_Value
                0x000009ba       0x90 ./DIO.o
                0x000009ba                DIO_Set_PORT_Value
 .text.DIO_Set_PIN_Value
                0x00000a4a      0x248 ./DIO.o
                0x00000a4a                DIO_Set_PIN_Value
 .text.DIO_get_PORT_Vlaue
                0x00000c92       0xa0 ./DIO.o
                0x00000c92                DIO_get_PORT_Vlaue
 .text.DIO_get_PIN_Vlaue
                0x00000d32      0x176 ./DIO.o
                0x00000d32                DIO_get_PIN_Vlaue
 .text.callbachfn
                0x00000ea8       0x82 ./main.o
                0x00000ea8                callbachfn
 .text.main     0x00000f2a       0xdc ./main.o
                0x00000f2a                main
 .text.libgcc   0x00001006        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00001006        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001006        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00001006                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001006        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00001006                exit
                0x00001006                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001006        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000100a                _etext = .

.data           0x00800060        0x4 load address 0x0000100a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./ADC.o
 .data          0x00800060        0x0 ./DIO.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.selectedCH
                0x00800060        0x4 ./ADC.o
                0x00800060                selectedCH
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800064                . = ALIGN (0x2)
                0x00800064                _edata = .
                0x00800064                PROVIDE (__data_end, .)

.bss            0x00800064       0x1d
                0x00800064                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800064        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800064        0x0 ./ADC.o
 .bss           0x00800064        0x0 ./DIO.o
 .bss           0x00800064        0x0 ./main.o
 .bss           0x00800064        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800064        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800064        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.channelsCounter
                0x00800064        0x1 ./ADC.o
 .bss.digitalVal
                0x00800065        0x2 ./ADC.o
 .bss.ADC_channel
                0x00800067        0x1 ./ADC.o
 *(COMMON)
 COMMON         0x00800068        0xf ./ADC.o
                0x00800068                feature
                0x00800069                x
                0x0080006b                ptrTocallbkfn
                0x0080006d                ADCvals
                0x00800075                ptrToCallBackFun
 COMMON         0x00800077        0xa ./main.o
                0x00800077                flag
                0x00800079                myadcvalues
                0x00800081                PROVIDE (__bss_end, .)
                0x0000100a                __data_load_start = LOADADDR (.data)
                0x0000100e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800081        0x0
                0x00800081                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800081                PROVIDE (__noinit_end, .)
                0x00800081                _end = .
                0x00800081                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1278
 *(.stab)
 .stab          0x00000000      0x8d0 ./ADC.o
 .stab          0x000008d0      0x720 ./DIO.o
                                0x930 (size before relaxing)
 .stab          0x00000ff0      0x288 ./main.o
                                0x4ec (size before relaxing)

.stabstr        0x00000000      0xcf5
 *(.stabstr)
 .stabstr       0x00000000      0xcf5 ./ADC.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(freeRunning_ADC.elf elf32-avr)
LOAD linker stubs
